// "use client"
// import { Geist, Geist_Mono } from "next/font/google";
// import Navbar from "./components/molecules/navbar";
// import "./globals.css";
// import Footer from "./components/molecules/footer";
// import { Toaster } from "react-hot-toast";
// import ClientToaster from "./components/ClientToaster";
// import ProtectedRoute from "./components/organisms/Access/ProtectedRoute";
// import Script from "next/script";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };




// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//         <head>
//         <Script
//           src="https://accounts.google.com/gsi/client"
//           strategy="beforeInteractive"
//         />
//       </head>
//       <body>
//         {/* ✅ Works now */}
//         <Navbar />
//         {children}
//         <Footer />
//       </body>
//     </html>
//   );
// }

// layout.js


import { Geist, Geist_Mono } from "next/font/google";
import Navbar from "./components/molecules/navbar";
import "./globals.css";
import Footer from "./components/molecules/footer";
import { Toaster } from "react-hot-toast";
import ClientToaster from "./components/ClientToaster";
import Script from "next/script";
import { AuthProvider } from "./api/auth/AuthContext";

 // ✅ Adjust this path if needed

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <Script
          src="https://accounts.google.com/gsi/client"
          strategy="beforeInteractive"
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AuthProvider>
          <Navbar />
          {children}
          <Footer />
          {/* <ClientToaster /> */}
          
        </AuthProvider>
      </body>
    </html>
  );
}
